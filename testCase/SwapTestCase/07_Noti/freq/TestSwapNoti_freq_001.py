#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# @Date    : 2021/11/10 5:26 下午
# @Author  : yuhuiqing
from tool.atp import ATP
import pytest, allure, random, time
from common.mysqlComm import orderSeq as DB_orderSeq
from common.SwapServiceWS import user01
from common.SwapServiceAPI import user01 as api_user01
from config.conf import DEFAULT_CONTRACT_CODE


@allure.epic('反向永续')
@allure.feature('行情')
@allure.story('增量')
@allure.tag('Script owner : 余辉青', 'Case owner : 吉龙')
@pytest.mark.stable
class TestSwapNoti_freq_001:
    ids = ['TestSwapNoti_freq_001']
    params = [{'case_name':'增加20档','size':'size_20','data_type':'incremental'}]
    contract_code = DEFAULT_CONTRACT_CODE

    @classmethod
    def setup_class(cls):
        with allure.step('挂盘更新深度'):
            currentPrice = ATP.get_current_price()
            for i in range(20):
                api_user01.swap_order(contract_code=cls.contract_code,direction='buy',price=round(currentPrice*i*0.01,2))
            pass

    @classmethod
    def teardown_class(cls):
        with allure.step('恢复环境-撤单'):
            api_user01.swap_cancelall(contract_code=cls.contract_code)
            pass

    @pytest.mark.flaky(reruns=3, reruns_delay=3)
    @pytest.mark.parametrize('params', params, ids=ids)
    def test_execute(self, params):
        allure.dynamic.title('' + params['case_name'])
        with allure.step('执行深度请求'):
            subs = {
                      "sub": "market.{}.depth.{}.high_freq".format(self.contract_code,params['size']),
                      "data_type":"{}".format(params['data_type']),
                      "id": "id generated by client"
                    }
            depth_info = user01.swap_sub(subs=subs)
            print(depth_info)
            pass
